#cpudef "sm1"
{
    #align 8
    
; ALU PRIMITIVES
 t        -> 0b011 @ 0x00[4:0] @ 0b00000000 
 n        -> 0b011 @ 0x01[4:0] @ 0b00000000
 r        -> 0b011 @ 0x02[4:0] @ 0b00000000
 get      -> 0b011 @ 0x03[4:0] @ 0b00000000
 put      -> 0b011 @ 0x04[4:0] @ 0b00000000
 dplus    -> 0b011 @ 0x05[4:0] @ 0b00000000
 dmul     -> 0b011 @ 0x06[4:0] @ 0b00000000
 and      -> 0b011 @ 0x07[4:0] @ 0b00000000
 or       -> 0b011 @ 0x08[4:0] @ 0b00000000
 xor      -> 0b011 @ 0x09[4:0] @ 0b00000000
 neg      -> 0b011 @ 0x0a[4:0] @ 0b00000000
 dec      -> 0b011 @ 0x0b[4:0] @ 0b00000000
 eq0      -> 0b011 @ 0x0c[4:0] @ 0b00000000
 eq       -> 0b011 @ 0x0d[4:0] @ 0b00000000
 ucmp     -> 0b011 @ 0x0e[4:0] @ 0b00000000
 cmp      -> 0b011 @ 0x0f[4:0] @ 0b00000000
 rshift   -> 0b011 @ 0x10[4:0] @ 0b00000000
 lshift   -> 0b011 @ 0x11[4:0] @ 0b00000000
 sp       -> 0b011 @ 0x12[4:0] @ 0b00000000
 rp       -> 0b011 @ 0x13[4:0] @ 0b00000000
 setsp    -> 0b011 @ 0x14[4:0] @ 0b00000000
 setrp    -> 0b011 @ 0x15[4:0] @ 0b00000000
 st       -> 0b011 @ 0x16[4:0] @ 0b00000000
 tx       -> 0b011 @ 0x17[4:0] @ 0b00000000
 rx       -> 0b011 @ 0x18[4:0] @ 0b00000000
 umod     -> 0b011 @ 0x19[4:0] @ 0b00000000
 mod      -> 0b011 @ 0x1a[4:0] @ 0b00000000
 bye      -> 0b011 @ 0x1b[4:0] @ 0b00000000
 setst    -> 0b011 @ 0x1c[4:0] @ 0b00000000

; --------------------------------------------

; ALU DERIVATES

;                  | PRIMITIVE | T2N | T2R | N2T | R2P | RSTK | DSTK |
;dup               | T         | T2N |     |     |     |      |  +1  |
 dup      -> 0b011 @ 0x00[4:0] @ 0b1 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b01
;over              | N         | T2N |     |     |     |      |  +1  |
 over     -> 0b011 @ 0x01[4:0] @ 0b1 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b01
;invert            | ~T        |     |     |     |     |      |      |
 invert   -> 0b011 @ 0x0a[4:0] @ 0b0 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b00
;swap              | N         | T2N |     |     |     |      |      |
 swap     -> 0b011 @ 0x01[4:0] @ 0b1 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b00
;nip               | T         |     |     |     |     |      |  -1  | 
 nip      -> 0b011 @ 0x00[4:0] @ 0b0 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b11
;drop              | N         |     |     |     |     |      |  -1  |
 drop     -> 0b011 @ 0x01[4:0] @ 0b0 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b11
;exit              | T         |     |     |     | R2P |  -1  |      |
 exit     -> 0b011 @ 0x00[4:0] @ 0b0 @ 0b0 @ 0b0 @ 0b1 @ 0b11 @ 0b00
;>r                | N         |     | T2R |     |     |  +1  |  -1  |
 tor      -> 0b011 @ 0x01[4:0] @ 0b0 @ 0b1 @ 0b0 @ 0b0 @ 0b01 @ 0b00
 ;r>               | R         | T2N |     |     |     |  -1  |  +1  |
 fromr    -> 0b011 @ 0x02[4:0] @ 0b1 @ 0b0 @ 0b0 @ 0b0 @ 0b11 @ 0b01
;r@                | R         | T2N |     |     |     |      |  +1  |
 rat      -> 0b011 @ 0x02[4:0] @ 0b1 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b01
;!                 | NtoT      |     |     |     |     |      |  -1  |
 store    -> 0b011 @ 0x01[4:0] @ 0b0 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b11
;rshift            | NrshiftT  |     |     |     |     |      |  -1  |
 rshiftd  -> 0b011 @ 0x10[4:0] @ 0b0 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b11
;lshift            | NlshiftT  |     |     |     |     |      |  -1  |
 lshiftd  -> 0b011 @ 0x11[4:0] @ 0b0 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b11
;=                 | T=N       |     |     |     |     |      |  -1  |
 eqd      -> 0b011 @ 0x0d[4:0] @ 0b0 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b11
;u<                | Nu<T      |     |     |     |     |      |  -1  |
 u<       -> 0b011 @ 0x0e[4:0] @ 0b0 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b11
;<                 | N<        |     |     |     |     |      |  -1  |
 cmpd     -> 0b011 @ 0x0f[4:0] @ 0b0 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b11
;and               | T&N       |     |     |     |     |      |  -1  |
 andd     -> 0b011 @ 0x07[4:0] @ 0b0 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b11
;xor               | T^N       |     |     |     |     |      |  -1  |
 xord     -> 0b011 @ 0x09[4:0] @ 0b0 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b11
;or                | T|N       |     |     |     |     |      |  -1  |
 ord      -> 0b011 @ 0x08[4:0] @ 0b0 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b11
;sp@               | SP@       | T2N |     |     |     |      |  +1  |
 spat     -> 0b011 @ 0x12[4:0] @ 0b1 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b11
;rp@               | RP@       | T2N |     |     |     |      |  +1  |
 rpat     -> 0b011 @ 0x13[4:0] @ 0b1 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b11
;nop               | T         |     |     |     |     |      |      |
 nop      -> 0b011 @ 0x00[4:0] @ 0b0 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b00
; 
 rup      -> 0b011 @ 0x00[4:0] @ 0b0 @ 0b0 @ 0b0 @ 0b0 @ 0b01 @ 0b00
;rdrop             | T         |     |     |     |     |  -1  |      | 
 rdrop    -> 0b011 @ 0x00[4:0] @ 0b0 @ 0b0 @ 0b0 @ 0b0 @ 0b11 @ 0b00
;rx?               | RX        | T2N |     |     |     |      |  +1  |
 rxget    -> 0b011 @ 0x18[4:0] @ 0b1 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b01
;tx!               | TX        |     |     | N2T |     |      |  -1  |
 txput    -> 0b011 @ 0x18[4:0] @ 0b0 @ 0b0 @ 0b1 @ 0b0 @ 0b00 @ 0b11
;um*               | T*N       |     |     |     |     |      |      |
 ummul    -> 0b011 @ 0x06[4:0] @ 0b0 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b00
;*                 | T*N       |     |     | N2T |     |      |  -1  |
 mul      -> 0b011 @ 0x06[4:0] @ 0b0 @ 0b0 @ 0b1 @ 0b0 @ 0b00 @ 0b11
;sp!               | SP!       |     |     |     |     |      |      |
 spput    -> 0b011 @ 0x14[4:0] @ 0b0 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b00
;rp!               | RP!       |     |     |     |     |      |  -1  |
 rpput    -> 0b011 @ 0x15[4:0] @ 0b0 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b11
;um/mod            | UM/MOD    | T2N |     |     |     |      |      |
 udivmod  -> 0b011 @ 0x19[4:0] @ 0b1 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b00
;
 umod     -> 0b011 @ 0x19[4:0] @ 0b1 @ 0b0 @ 0b1 @ 0b0 @ 0b00 @ 0b11
;
 udiv     -> 0b011 @ 0x19[4:0] @ 0b0 @ 0b0 @ 0b0 @ 0b0 @ 0b11 @ 0b00
;/mod              | /MOD      | T2N |     |     |     |      |      |
 divmod   -> 0b011 @ 0x19[4:0] @ 0b1 @ 0b0 @ 0b1 @ 0b0 @ 0b00 @ 0b11
;/                 | /MOD      |     |     |     |     |      |  -1  |
 div      -> 0b011 @ 0x1a[4:0] @ 0b0 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b11
;mod               | /MOD      |     |     | N2T |     |      |  -1  |
 modd     -> 0b011 @ 0x1a[4:0] @ 0b0 @ 0b0 @ 0b1 @ 0b0 @ 0b00 @ 0b11
; 
 dup-at   -> 0b011 @ 0x03[4:0] @ 0b1 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b01
; 
 duptor   -> 0b011 @ 0x00[4:0] @ 0b0 @ 0b1 @ 0b0 @ 0b0 @ 0b01 @ 0b00
; 
 twodupequ-> 0b011 @ 0x0f[4:0] @ 0b1 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b11
; 
 twodupxor-> 0b011 @ 0x09[4:0] @ 0b1 @ 0b0 @ 0b0 @ 0b0 @ 0b00 @ 0b01
; 
 rxchg    -> 0b011 @ 0x02[4:0] @ 0b0 @ 0b1 @ 0b0 @ 0b0 @ 0b00 @ 0b00
 ;+                | T+N       |     |     | N2T |     |      |  -1  |
 add      -> 0b011 @ 0x05[4:0] @ 0b0 @ 0b1 @ 0b1 @ 0b0 @ 0b00 @ 0b11

; ------------------------------------

 call    {addr} -> 0b010 @ addr[12:0]
 branch  {addr} -> 0b000 @ addr[12:0]
 zbranch {addr} -> 0b001 @ addr[12:0]
 literal {data} -> 0b1   @ data[14:0]
}